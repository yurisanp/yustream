# Upstream para o servidor de autenticação
upstream auth_server {
    server yustream-auth:3001;
}

# Upstream para o addon Stremio
upstream stremio_server {
    server stremio-addon:7000;
}

# Upstream para o Portainer
upstream portainer_server {
    server yustream-portainer:9000;
}

# Upstream para o serviço VNC Proxy
upstream vnc_proxy_server {
    server yustream-vnc-proxy:3003;
}

# Upstream para o websockify (WebSocket → TCP)
upstream websockify_backend {
    server yustream-websockify:5901;
    keepalive 32;
}

# Servidor principal
server {
    listen 80;

    # Redirecionamentos para Stremio addon na raiz (usando SDK oficial) - DEVEM VIR ANTES DO FALLBACK
    location ~ ^/manifest.json {
        proxy_pass http://stremio_server;
        proxy_pass_header Content-Length;
        proxy_pass_header Content-Type;

        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    location = /configure {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # URLs com credenciais JSON encoded para Stremio
    location ~ ^/\{.*\}/manifest\.json$ {
        proxy_pass http://stremio_server;
        proxy_pass_header Content-Length;
        proxy_pass_header Content-Type;

        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    location ~ ^/\{.*\}/catalog/(.+)\.json$ {
        proxy_pass http://stremio_server;
        proxy_set_header Host $host;
        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

        location ~ ^/\{.*\}/meta/(.+)\.json$ {
        proxy_pass http://stremio_server;
        proxy_set_header Host $host;
        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    location ~ ^/\{.*\}/subtitles/(.+)\.json$ {
        proxy_pass http://stremio_server;
        proxy_set_header Host $host;
        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    location ~ ^/\{.*\}/stream/(.+)\.json$ {
        proxy_pass http://stremio_server;
        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    # Fallback para outros padrões de catalog/stream
    location ~ ^/catalog/(.+)\.json$ {
        proxy_pass http://stremio_server;
        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

        location ~ ^/meta/(.+)\.json$ {
        proxy_pass http://stremio_server;
        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    location ~ ^/subtitles/(.+)\.json$ {
        proxy_pass http://stremio_server;
        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    location ~ ^/stream/(.+)\.json$ {
        proxy_pass http://stremio_server;
        proxy_set_header Accept-Encoding "";  # evita gzip
        gzip off;

        proxy_buffering off;
        chunked_transfer_encoding off;
    }

    # ========== CONFIGURAÇÕES VNC (LOCALHOST) ==========
    
    # Endpoint para status VNC (desenvolvimento - sem auth)
    location /api/vnc/status {
        # Proxy para o serviço auxiliar que fará o teste
        proxy_pass http://vnc_proxy_server/api/vnc/status;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, Authorization, Content-Type" always;
    }

    # WebSocket VNC Proxy (desenvolvimento - sem auth)
    location /vnc-ws {     
        # Proxy WebSocket para websockify (WebSocket → TCP)
        proxy_pass http://websockify_backend;
        
        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts para WebSocket
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings para VNC
        proxy_buffering off;
        proxy_request_buffering off;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, Authorization, Content-Type" always;
        
        # Log da conexão VNC
        access_log /var/log/nginx/vnc_access.log combined;
    }

    # Rotas da API VNC (devem vir antes das rotas gerais da API)
    location /api/admin/vnc/ {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        proxy_pass http://vnc_proxy_server/api/admin/vnc/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configurações especiais para uploads de arquivo
        client_max_body_size 100M;
        proxy_request_buffering off;
        proxy_buffering off;
        
        # Timeouts maiores para transferências de arquivo
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Rotas da API de autenticação
    location /api/ {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    
        proxy_pass http://auth_server/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Rota para o Portainer (gerenciamento de containers)
    location /portainer/ {
        proxy_pass http://portainer_server/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support para Portainer
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts para interface administrativa
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Assets do Stremio addon
    location /stremio-assets/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }

    # Status do servidor
    location /status {
        access_log off;
        return 200 "OvenMediaEngine Proxy OK";
        add_header Content-Type text/plain;
    }

    # ========== CONFIGURAÇÕES YUSTREAM SMART TV ==========
    
    # Smart TV App (rota específica)
    location /tv {
        alias /usr/share/nginx/html/smarttv;
        index index.html;
        try_files $uri $uri/ /smarttv/index.html;
        
        # Headers CORS para Smart TVs
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        
        # Cache otimizado para Smart TV
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
              
        # Manifest PWA
        location ~ /tv/manifest\.json$ {
            alias /usr/share/nginx/html/smarttv/manifest.json;
            expires 1d;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # Mobile Expo (rota específica)
    location /mobile {
        alias /usr/share/nginx/html/mobile;
        index index.html;
        try_files $uri $uri/ /mobile/index.html;
        
        # Headers CORS para Smart TVs
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    }
    
    # Status da aplicação Smart TV
    location /tv/status {
        access_log off;
        return 200 "YuStream Smart TV OK";
        add_header Content-Type text/plain;
        add_header Access-Control-Allow-Origin "*";
    }

    # Página principal com player (fallback) - DEVE VIR POR ÚLTIMO
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # Configurações de performance
    client_max_body_size 50M;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 4k;
    proxy_buffers 16 32k;
    proxy_busy_buffers_size 64k;
}
