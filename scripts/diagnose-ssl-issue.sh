#!/bin/bash

# Script para diagnosticar problemas de SSL com Let's Encrypt

set -e

DOMAIN="yustream.yurisp.com.br"

echo "üîç Diagnosticando problema de SSL para $DOMAIN..."
echo "=============================================="

# 1. Verificar DNS
echo "1Ô∏è‚É£ Verificando DNS..."
if nslookup $DOMAIN > /dev/null 2>&1; then
    echo "‚úÖ DNS resolvendo"
    DOMAIN_IP=$(nslookup $DOMAIN | grep -A1 "Name:" | tail -1 | awk '{print $2}')
    echo "   IP do dom√≠nio: $DOMAIN_IP"
else
    echo "‚ùå DNS n√£o resolvendo"
    exit 1
fi

# 2. Verificar se aponta para este servidor
echo ""
echo "2Ô∏è‚É£ Verificando se aponta para este servidor..."
SERVER_IP=$(curl -s ifconfig.me)
echo "   IP do servidor: $SERVER_IP"

if [ "$SERVER_IP" = "$DOMAIN_IP" ]; then
    echo "‚úÖ Dom√≠nio aponta para este servidor"
else
    echo "‚ùå Dom√≠nio N√ÉO aponta para este servidor"
    echo "   Configure o DNS: A record $DOMAIN -> $SERVER_IP"
    exit 1
fi

# 3. Verificar se as portas est√£o livres
echo ""
echo "3Ô∏è‚É£ Verificando portas 80 e 443..."
if lsof -i :80 > /dev/null 2>&1; then
    echo "‚ö†Ô∏è Porta 80 em uso:"
    lsof -i :80
    echo "   Pare o servi√ßo que est√° usando a porta 80"
else
    echo "‚úÖ Porta 80 livre"
fi

if lsof -i :443 > /dev/null 2>&1; then
    echo "‚ö†Ô∏è Porta 443 em uso:"
    lsof -i :443
    echo "   Pare o servi√ßo que est√° usando a porta 443"
else
    echo "‚úÖ Porta 443 livre"
fi

# 4. Verificar conectividade externa
echo ""
echo "4Ô∏è‚É£ Verificando conectividade externa..."
if curl -s -o /dev/null -w "%{http_code}" "http://$DOMAIN" | grep -q "200\|301\|302\|404"; then
    echo "‚úÖ Conectividade HTTP funcionando"
else
    echo "‚ùå Conectividade HTTP n√£o funcionando"
    echo "   Teste manual: curl -I http://$DOMAIN"
fi

# 5. Verificar se o Nginx est√° configurado corretamente
echo ""
echo "5Ô∏è‚É£ Verificando configura√ß√£o do Nginx..."
if [ -f "nginx/conf.d/streaming.conf" ]; then
    if grep -q "server_name.*$DOMAIN" nginx/conf.d/streaming.conf; then
        echo "‚úÖ Nginx configurado para o dom√≠nio"
    else
        echo "‚ö†Ô∏è Nginx pode n√£o estar configurado para o dom√≠nio"
    fi
else
    echo "‚ùå Arquivo de configura√ß√£o do Nginx n√£o encontrado"
fi

# 6. Testar valida√ß√£o Let's Encrypt
echo ""
echo "6Ô∏è‚É£ Testando valida√ß√£o Let's Encrypt..."
mkdir -p ./ssl/certbot/www/.well-known/acme-challenge
echo "test-validation" > ./ssl/certbot/www/.well-known/acme-challenge/test

# Verificar se o Nginx est√° servindo o arquivo de teste
if curl -s "http://$DOMAIN/.well-known/acme-challenge/test" | grep -q "test-validation"; then
    echo "‚úÖ Valida√ß√£o Let's Encrypt funcionando"
else
    echo "‚ùå Valida√ß√£o Let's Encrypt N√ÉO funcionando"
    echo "   Verifique se o Nginx est√° configurado para servir /.well-known/acme-challenge/"
    echo "   Teste manual: curl http://$DOMAIN/.well-known/acme-challenge/test"
fi

rm -f ./ssl/certbot/www/.well-known/acme-challenge/test

# 7. Verificar logs do Nginx
echo ""
echo "7Ô∏è‚É£ Verificando logs do Nginx..."
if docker compose ps | grep -q "nginx"; then
    echo "‚úÖ Nginx est√° rodando"
    echo "   √öltimas linhas dos logs:"
    docker compose logs --tail=10 nginx
else
    echo "‚ùå Nginx n√£o est√° rodando"
fi

# 8. Sugest√µes de corre√ß√£o
echo ""
echo "üîß Sugest√µes de corre√ß√£o:"
echo "========================="

if [ "$SERVER_IP" != "$DOMAIN_IP" ]; then
    echo "1. Configure o DNS:"
    echo "   A record: $DOMAIN -> $SERVER_IP"
    echo "   Aguarde a propaga√ß√£o DNS (pode levar at√© 24h)"
fi

if lsof -i :80 > /dev/null 2>&1; then
    echo "2. Pare o servi√ßo que est√° usando a porta 80:"
    echo "   sudo systemctl stop apache2  # se for Apache"
    echo "   sudo systemctl stop nginx    # se for Nginx do sistema"
    echo "   docker compose down          # se for Docker"
fi

if ! curl -s "http://$DOMAIN/.well-known/acme-challenge/test" | grep -q "test-validation"; then
    echo "3. Configure o Nginx para servir /.well-known/acme-challenge/:"
    echo "   Adicione ao nginx/conf.d/streaming.conf:"
    echo "   location /.well-known/acme-challenge/ {"
    echo "       root /var/www/certbot;"
    echo "   }"
fi

echo ""
echo "4. Use o m√©todo standalone (mais confi√°vel):"
echo "   sudo ./scripts/setup-ssl-standalone.sh"

echo ""
echo "5. Ou use o m√©todo webroot (ap√≥s corrigir o Nginx):"
echo "   sudo ./scripts/setup-ssl.sh"

echo ""
echo "üìû Se o problema persistir:"
echo "   - Verifique os logs: docker compose logs nginx"
echo "   - Teste manualmente: curl -I http://$DOMAIN"
echo "   - Verifique o firewall: sudo ufw status"
echo ""
