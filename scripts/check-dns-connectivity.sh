#!/bin/bash

# Script para verificar DNS e conectividade antes de configurar SSL

set -e

DOMAIN="yustream.yurisp.com.br"

echo "üîç Verificando DNS e conectividade para $DOMAIN..."
echo "=================================================="

# Verificar resolu√ß√£o DNS
echo "üì° Verificando resolu√ß√£o DNS..."
if nslookup $DOMAIN > /dev/null 2>&1; then
    echo "‚úÖ DNS resolvendo corretamente"
    nslookup $DOMAIN
else
    echo "‚ùå Erro: DNS n√£o est√° resolvendo"
    echo "   Configure o DNS para apontar para este servidor:"
    echo "   A record: $DOMAIN -> $(curl -s ifconfig.me)"
    exit 1
fi

# Verificar se o dom√≠nio aponta para este servidor
echo ""
echo "üåê Verificando se o dom√≠nio aponta para este servidor..."
SERVER_IP=$(curl -s ifconfig.me)
DOMAIN_IP=$(nslookup $DOMAIN | grep -A1 "Name:" | tail -1 | awk '{print $2}')

echo "   IP do servidor: $SERVER_IP"
echo "   IP do dom√≠nio: $DOMAIN_IP"

if [ "$SERVER_IP" = "$DOMAIN_IP" ]; then
    echo "‚úÖ Dom√≠nio aponta corretamente para este servidor"
else
    echo "‚ùå Erro: Dom√≠nio n√£o aponta para este servidor"
    echo "   Configure o DNS para apontar para: $SERVER_IP"
    exit 1
fi

# Verificar conectividade HTTP
echo ""
echo "üîó Verificando conectividade HTTP..."
if curl -s -o /dev/null -w "%{http_code}" "http://$DOMAIN" | grep -q "200\|301\|302\|404"; then
    echo "‚úÖ Conectividade HTTP funcionando"
else
    echo "‚ö†Ô∏è Aviso: Conectividade HTTP pode n√£o estar funcionando"
    echo "   Verifique se o Nginx est√° rodando e configurado corretamente"
fi

# Verificar portas
echo ""
echo "üîå Verificando portas..."
if netstat -tlnp | grep -q ":80 "; then
    echo "‚úÖ Porta 80 est√° em uso"
else
    echo "‚ö†Ô∏è Porta 80 n√£o est√° em uso (necess√°rio para valida√ß√£o SSL)"
fi

if netstat -tlnp | grep -q ":443 "; then
    echo "‚úÖ Porta 443 est√° em uso"
else
    echo "‚ÑπÔ∏è Porta 443 n√£o est√° em uso (ser√° usada ap√≥s SSL)"
fi

# Verificar firewall
echo ""
echo "üî• Verificando firewall..."
if command -v ufw &> /dev/null; then
    UFW_STATUS=$(ufw status | head -1)
    echo "   Status UFW: $UFW_STATUS"
    
    if ufw status | grep -q "80/tcp"; then
        echo "‚úÖ Porta 80 permitida no firewall"
    else
        echo "‚ö†Ô∏è Porta 80 pode n√£o estar permitida no firewall"
    fi
    
    if ufw status | grep -q "443/tcp"; then
        echo "‚úÖ Porta 443 permitida no firewall"
    else
        echo "‚ö†Ô∏è Porta 443 pode n√£o estar permitida no firewall"
    fi
else
    echo "‚ÑπÔ∏è UFW n√£o est√° instalado"
fi

# Verificar servi√ßos Docker
echo ""
echo "üê≥ Verificando servi√ßos Docker..."
if docker compose ps | grep -q "nginx"; then
    echo "‚úÖ Nginx est√° rodando"
else
    echo "‚ö†Ô∏è Nginx n√£o est√° rodando"
fi

if docker compose ps | grep -q "ovenmediaengine"; then
    echo "‚úÖ OvenMediaEngine est√° rodando"
else
    echo "‚ö†Ô∏è OvenMediaEngine n√£o est√° rodando"
fi

# Teste de valida√ß√£o Let's Encrypt
echo ""
echo "üîê Testando valida√ß√£o Let's Encrypt..."
mkdir -p ./ssl/certbot/www/.well-known/acme-challenge
echo "test-file" > ./ssl/certbot/www/.well-known/acme-challenge/test

if curl -s "http://$DOMAIN/.well-known/acme-challenge/test" | grep -q "test-file"; then
    echo "‚úÖ Valida√ß√£o Let's Encrypt funcionando"
    rm -f ./ssl/certbot/www/.well-known/acme-challenge/test
else
    echo "‚ùå Erro: Valida√ß√£o Let's Encrypt n√£o est√° funcionando"
    echo "   Verifique se o Nginx est√° configurado para servir /.well-known/acme-challenge/"
    rm -f ./ssl/certbot/www/.well-known/acme-challenge/test
fi

echo ""
echo "üìã Resumo da verifica√ß√£o:"
echo "   - DNS: $(nslookup $DOMAIN > /dev/null 2>&1 && echo "‚úÖ OK" || echo "‚ùå ERRO")"
echo "   - IP correto: $([ "$SERVER_IP" = "$DOMAIN_IP" ] && echo "‚úÖ OK" || echo "‚ùå ERRO")"
echo "   - HTTP: $(curl -s -o /dev/null -w "%{http_code}" "http://$DOMAIN" | grep -q "200\|301\|302\|404" && echo "‚úÖ OK" || echo "‚ö†Ô∏è AVISO")"
echo "   - Valida√ß√£o LE: $(curl -s "http://$DOMAIN/.well-known/acme-challenge/test" > /dev/null 2>&1 && echo "‚úÖ OK" || echo "‚ùå ERRO")"

echo ""
echo "üéØ Pr√≥ximos passos:"
if [ "$SERVER_IP" = "$DOMAIN_IP" ] && nslookup $DOMAIN > /dev/null 2>&1; then
    echo "   ‚úÖ DNS configurado corretamente"
    echo "   üöÄ Pode prosseguir com a configura√ß√£o SSL:"
    echo "      sudo ./scripts/setup-ssl-standalone.sh"
else
    echo "   ‚ùå Configure o DNS primeiro:"
    echo "      A record: $DOMAIN -> $SERVER_IP"
    echo "   ‚è≥ Aguarde a propaga√ß√£o DNS (pode levar at√© 24h)"
fi
echo ""
